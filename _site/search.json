[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Determinação e Calibração da Concentração de Inóculo Fúngico",
    "section": "",
    "text": "Determinação e Calibração da Concentração de Inóculo Fúngico\n\nVia suspensão de esporos utilizando hemacitômetro\nO hemacitômetro comum consiste em uma lâmina retangular em forma de H, na qual se encontram duas regiões delimitadas, (figura I). Cada região delimitada possui uma superfície de 9 mm² e profundidade de 0,1 mm. Esse compartimento possui 9 divisões/quadrantes, (figura II) que são de três tipos, são eles “A” = “B” = “C”, em que:\n\n“A” – localizados nos quatro cantos e subdivididos em 15 quadrados “a”\n“B” – localizados entre os compartimentos “A” e subdivididos em 20 quadrados “b”\n“C” – localizado no centro e subdivididos em 25 quadrados “c”\n\n\n\n\nI: Esquema de um hemacitômetro tipo Neubauer: lâmina retangular em forma de “H”, II compartimentos (A, B, C) e subcompartimentos (a-c) da lâmina (fonte: Alfenas & Mafia, 2016)\n\n\nPara utilizar o aplicativo, preencha os campos conforme o indicado e escolha o quadrante no qual foi realizada a contagem de esporos. Insira o volume final de suspensão de esporos e a concentração desejada. A aplicação lhe retornara três valores:\n\nEsporos por mL da suspensão inicial\nVolume da suspensão inicial para preparo da suspensão de inóculo final em mL\nVolume de veículo para preparo da suspensão de inóculo final em mL\n\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 900\n\nwebr::install(\"dplyr\")\n\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(bslib)\n\n# -----------------------------\n# Função inoculo (inalterada)\n# -----------------------------\ninoculo &lt;- function(numero, quadrante, conc, volume) {\n  fator_correcao &lt;- case_when(\n    quadrante == \"A\" ~ 10000,\n    quadrante == \"a\" ~ 160000,\n    quadrante == \"b\" ~ 200000,\n    quadrante == \"c\" ~ 250000,\n    quadrante == \"c'\" ~ 4000000,\n    TRUE ~ 1\n  )\n  esporo_mL &lt;- numero * fator_correcao\n  volume_inoculo &lt;- (conc * volume) / esporo_mL\n  volume_veiculo &lt;- volume - volume_inoculo\n  return(list(esporo_mL = esporo_mL, volume_inoculo = volume_inoculo, volume_veiculo = volume_veiculo))\n}\n\n# -----------------------------\n# UI\n# -----------------------------\nui &lt;- navbarPage(\n  theme = bs_theme(bootswatch = \"lumen\"),\n  tabPanel(\"Calibração de Inóculo\",\n           \n           # CSS para usar largura total da tela\n           tags$head(\n             tags$style(HTML(\"\n               .container-fluid {\n                 max-width: 100% !important;\n               }\n               pre {\n                 white-space: pre-wrap;\n                 word-wrap: break-word;\n                 overflow-x: hidden;\n               }\n             \"))\n           ),\n           \n           h3(\"Calibração de Inóculo Fúngico\", \n              style = \"text-align:center; margin-bottom:25px;\"),\n           \n           fluidRow(\n             # Coluna esquerda (inputs)\n             column(width = 6,\n                    card(\n                      card_header(\"Parâmetros\"),\n                      card_body(\n                        numericInput(\"numero\", \"Número MÉDIO de esporos contados:\", 0, min = 1),\n                        radioButtons(\"quadrante\", \"Quadrante:\",\n                                     c(\"A\" = \"A\", \"a\" = \"a\", \"b\" = \"b\", \n                                       \"c\" = \"c\", \"c'\" = \"c'\")),\n                        numericInput(\"volume\", \"Volume final desejado (mL):\", 0, min = 0),\n                        radioButtons(\"conc\", \"Concentração desejada:\",\n                                     c(\"10²\" = 100,\"10³\" = 1000,\"10⁴\" = 10000,\"10⁵\" = 100000,\n                                       \"10⁶\" = 1000000,\"10⁷\" = 10000000,\"10⁸\" = 100000000,\n                                       \"10⁹\"=1000000000,\"10¹⁰\"=10000000000))\n                      )\n                    )\n             ),\n             \n             # Coluna direita (resultados sem scroll, fundo verde)\n             column(width = 9,\n                    card(\n                      card_header(\"Resultados\"),\n                      card_body(\n                        tags$pre(\n                          textOutput(\"resultado\"),\n                          style = \"background-color:#d4edda; \n                                   color:#155724; \n                                   font-weight:bold; \n                                   padding:20px; \n                                   border-radius:10px; \n                                   font-size:16px;\"\n                        )\n                      )\n                    )\n             )\n           )\n  )\n)\n\n# -----------------------------\n# Server (inalterado)\n# -----------------------------\nserver &lt;- function(input, output, session) {\n  output$resultado &lt;- renderText({\n    resultado &lt;- inoculo(input$numero, input$quadrante, \n                         as.numeric(input$conc), input$volume)\n    paste(\"Esporos por mL (Ci):\", format(resultado$esporo_mL, scientific = TRUE), \"\\n\",\n          \"Volume para Inóculo (Vi):\", resultado$volume_inoculo, \"\\n\",\n          \"Volume de Veículo (água):\", resultado$volume_veiculo)\n  })\n}\n\n# -----------------------------\n# Run the application\n# -----------------------------\nshinyApp(ui = ui, server = server)\n\n\n\nReferência: Alfenas A., Mafia R. Métodos em Fitopatologia. 2ª edição. Editora UFV. 2016.\n\n\n\n\n“Copyright 2024, Endrio Webers”"
  },
  {
    "objectID": "dose_calc.html",
    "href": "dose_calc.html",
    "title": "",
    "section": "",
    "text": "(media/app/tabela_conversao.png){fig-align=“right” width=500px}\n#| '!! shinylive warning !!': |\n#|   shinylive does not work in self-contained HTML documents.\n#|   Please set `embed-resources: false` in your metadata.\n#| standalone: true\n#| viewerHeight: 500\nwebr::install(\"dplyr\")\n\nlibrary(shiny)\nlibrary(dplyr)\n\n# Definindo as unidades disponíveis\nunidades &lt;- c(\"mg/L\", \"g/L\", \"µg/mL\", \"g/mL\", \"ppm\", \"mg/mL\")\n\n# Definindo a interface do usuário (UI)\nui &lt;- fluidPage(\n  titlePanel(\"Conversor de Doses\"),\n  tags$head(\n    tags$style(HTML(\".shiny-input-container { margin-bottom: 20px; }\n      #resultado { padding: 10px; border: 2px solid #4CAF50;\n      background-color: #DFF2BF; color: #4CAF50; font-weight: bold;\n      border-radius: 5px; } body { font-family: Arial, sans-serif; }\n      .title { color: #4CAF50; } .panel { background-color: #F9F9F9;\n      border-radius: 5px; padding: 20px; box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1); }\"))\n  ),\n  sidebarLayout(\n    sidebarPanel(\n      class = \"panel\",\n      numericInput(\"valor\", \"Valor:\", value = 0, min = 0),\n      selectInput(\"unidade_entrada\", \"De:\", choices = unidades),\n      selectInput(\"unidade_saida\", \"Para:\", choices = unidades),\n      textOutput(\"resultado\")\n    ),\n    mainPanel()\n  )\n)\n\nserver &lt;- function(input, output) {\n  converter_dose &lt;- function(valor, unidade_entrada, unidade_saida) {\n    if (unidade_entrada == unidade_saida) {\n      resultado &lt;- valor\n    } else {\n      if (unidade_entrada == \"mg/L\" && unidade_saida == \"g/L\") {\n        resultado &lt;- valor / 1000\n      } else if (unidade_entrada == \"mg/L\" && unidade_saida == \"µg/mL\") {\n        resultado &lt;- valor * 1\n      } else if (unidade_entrada == \"mg/L\" && unidade_saida == \"g/mL\") {\n        resultado &lt;- valor / 1000000\n      } else if (unidade_entrada == \"mg/L\" && unidade_saida == \"ppm\") {\n        resultado &lt;- valor * 1\n      } else if (unidade_entrada == \"mg/L\" && unidade_saida == \"mg/mL\") {\n        resultado &lt;- valor / 1000\n      } else if (unidade_entrada == \"g/L\" && unidade_saida == \"mg/L\") {\n        resultado &lt;- valor * 1000\n      } else if (unidade_entrada == \"g/L\" && unidade_saida == \"µg/mL\") {\n        resultado &lt;- valor * 1000000\n      } else if (unidade_entrada == \"g/L\" && unidade_saida == \"g/mL\") {\n        resultado &lt;- valor / 1000\n      } else if (unidade_entrada == \"g/L\" && unidade_saida == \"ppm\") {\n        resultado &lt;- valor * 1000000\n      } else if (unidade_entrada == \"g/L\" && unidade_saida == \"mg/mL\") {\n        resultado &lt;- valor * 1\n      } else if (unidade_entrada == \"µg/mL\" && unidade_saida == \"mg/L\") {\n        resultado &lt;- valor * 1\n      } else if (unidade_entrada == \"µg/mL\" && unidade_saida == \"g/L\") {\n        resultado &lt;- valor / 1000\n      } else if (unidade_entrada == \"µg/mL\" && unidade_saida == \"g/mL\") {\n        resultado &lt;- valor / 1000000\n      } else if (unidade_entrada == \"µg/mL\" && unidade_saida == \"ppm\") {\n        resultado &lt;- valor * 1\n      } else if (unidade_entrada == \"g/mL\" && unidade_saida == \"mg/L\") {\n        resultado &lt;- valor * 1000000\n      } else if (unidade_entrada == \"g/mL\" && unidade_saida == \"g/L\") {\n        resultado &lt;- valor * 1000\n      } else if (unidade_entrada == \"g/mL\" && unidade_saida == \"µg/mL\") {\n        resultado &lt;- valor * 1000000\n      } else if (unidade_entrada == \"g/mL\" && unidade_saida == \"ppm\") {\n        resultado &lt;- valor * 1000000\n      } else if (unidade_entrada == \"g/mL\" && unidade_saida == \"mg/mL\") {\n        resultado &lt;- valor * 1000\n      } else if (unidade_entrada == \"ppm\" && unidade_saida == \"mg/L\") {\n        resultado &lt;- valor * 1\n      } else if (unidade_entrada == \"ppm\" && unidade_saida == \"g/L\") {\n        resultado &lt;- valor / 1000\n      } else if (unidade_entrada == \"ppm\" && unidade_saida == \"µg/mL\") {\n        resultado &lt;- valor * 1\n      } else if (unidade_entrada == \"ppm\" && unidade_saida == \"g/mL\") {\n        resultado &lt;- valor / 1000000\n      } else if (unidade_entrada == \"ppm\" && unidade_saida == \"mg/mL\") {\n        resultado &lt;- valor / 1000\n      } else {\n        resultado &lt;- valor\n      }\n    }\n    return(resultado)\n  }\n  output$resultado &lt;- renderText({\n    valor_convertido &lt;- converter_dose(input$valor, input$unidade_entrada, input$unidade_saida)\n    paste(\"Valor convertido:\", valor_convertido, input$unidade_saida)\n  })\n}\n\nshinyApp(ui = ui, server = server)\n\n\n\n\n“Copyright 2025, Endrio Webers”"
  }
]